{{ template "layout" . }}

{{ define "title" }}{{ call .T "Registration" }}{{ end }}

{{ define
  "content"
}}
  {{ template "header" . }}

  {{ $dividerNeeded := false }}

  <!-- Sign in with OpenID -->
  {{ if gt (len .WebOIDCProviders) 0 }}
    {{ if $dividerNeeded }}
      <div class="divider">or</div>
      {{ $dividerNeeded = false }}
    {{ end }}
    <h3><img class="openid-logo" src="{{ .App.PublicURL }}/openid-logo.svg" alt="{{ call .T "OpenID logo" }}"></h3>
    {{ range $provider := $.WebOIDCProviders }}
      <p>
      {{ if and $provider.RequireInvite (not $.InviteCode) }}
        {{ call $.T "Signing in with %s requires an invite." $provider.Name }}
      {{ else }}
        <a href="{{ $provider.AuthURL }}">{{ call $.T "Sign in with %s" $provider.Name }}</a>
      </p>
      {{ end }}
    {{ end }}
    {{ $dividerNeeded = true }}
  {{ end }}

  <!-- RegistrationNewPlayer -->
  {{ if and .App.Config.RegistrationNewPlayer.Allow .App.Config.AllowPasswordLogin }}
    {{ if $dividerNeeded }}
      <div class="divider">{{ call .T "or" }}</div>
      {{ $dividerNeeded = false }}
    {{ end }}
    <h3>{{ call .T "Register" }}</h3>
    {{ if and .App.Config.RegistrationNewPlayer.RequireInvite (not .InviteCode) }}
      <p>{{ call .T "Registration as a new player is invite-only." }}</p>
    {{ else }}
      {{ if .App.Config.CreateNewPlayer.AllowChoosingUUID }}
        <p>{{ call .T "Register a new account:" }}</p>
      {{ else }}
        <p>{{ call .T "Register a new account with a random UUID:" }}</p>
      {{ end }}
      <form action="{{ .App.FrontEndURL }}/web/register" method="post">
        <input
          type="text"
          name="playerName"
          placeholder="{{ call .T "Username" }}"
          maxlength="{{ .App.Constants.MaxUsernameLength }}"
          required
        />
        <input
          type="password"
          name="password"
          placeholder="{{ call .T "Password" }}"
          minlength="{{ .App.Config.MinPasswordLength }}"
          required
        />
        {{ if .App.Config.CreateNewPlayer.AllowChoosingUUID }}
          <p>
            <input
              class="long"
              type="text"
              name="uuid"
              placeholder="{{ if eq .App.Config.PlayerUUIDGeneration "offline" }}{{ call .T "Player UUID (leave blank for offline UUID)" }}{{ else }}{{ call .T "Player UUID (leave blank for random)" }}{{ end }}"
              pattern="^[0-9a-f]{8}-?[0-9a-f]{4}-?[0-9a-f]{4}-?[0-9a-f]{4}-?[0-9a-f]{12}$"
            />
          </p>
        {{ end }}
        <input type="text" name="inviteCode" value="{{ .InviteCode }}" hidden />
        <input hidden name="returnUrl" value="{{ .URL }}" />
        {{ if .InviteCode }}
          <p><em>{{ call .T "Using invite code %s" .InviteCode }}</em></p>
        {{ end }}
        <p>
          <input type="submit" value="{{ call .T "Register" }}" />
        </p>
      </form>
    {{ end }}
    {{ $dividerNeeded = true }}
  {{ end }}

  <!-- RegistrationExistingPlayer -->
  {{ if and .App.Config.RegistrationExistingPlayer.Allow .App.Config.AllowPasswordLogin }}
    {{ if $dividerNeeded }}
      <div class="divider">{{ call .T "or" }}</div>
      {{ $dividerNeeded = false }}
    {{ end }}
    <h3>{{ call .T "Register from an existing Minecraft player" }}</h3>
    {{ if and .App.Config.RegistrationExistingPlayer.RequireInvite (not .InviteCode) }}
      <p>{{ call .T "Registration as an existing player is invite-only." }}</p>
    {{ else }}
      {{ if .App.Config.ImportExistingPlayer.RequireSkinVerification }}
        <p>
          {{ call .T
            "Register a new account with the UUID of an existing %s account. Requires verification that you own the account."
            .App.Config.ImportExistingPlayer.Nickname
          }}
        </p>
        {{ if .InviteCode }}
          <p><em>{{ call .T "Using invite code %s" .InviteCode }}</em></p>
        {{ end }}
        <form action="{{ .App.FrontEndURL }}/web/register-challenge" method="get">
          <input
            type="text"
            name="playerName"
            placeholder="{{ call .T "%s player name" .App.Config.ImportExistingPlayer.Nickname }}"
            maxlength="{{ .App.Constants.MaxUsernameLength }}"
            required
          />
          <input
            type="text"
            name="inviteCode"
            value="{{ .InviteCode }}"
            hidden
          />
          <input hidden name="returnUrl" value="{{ .URL }}" />
          <input type="submit" value="{{ call .T "Continue" }}" />
        </form>
      {{ else }}
        <p>
          {{ call .T "Register a new account with the UUID of an existing %s account" .App.Config.ImportExistingPlayer.Nickname }}
        </p>
        <form action="{{ .App.FrontEndURL }}/web/register" method="post">
          <input
            type="text"
            name="playerName"
            placeholder="{{ call .T "%s player name" .App.Config.ImportExistingPlayer.Nickname }}"
            maxlength="{{ .App.Constants.MaxUsernameLength }}"
            required
          />
          <input
            type="password"
            name="password"
            placeholder="{{ call .T "Password" }}"
            minlength="{{ .App.Config.MinPasswordLength }}"
            class="long"
            required
          />
          <input type="checkbox" name="existingPlayer" checked hidden />
          <input
            type="text"
            name="inviteCode"
            value="{{ .InviteCode }}"
            hidden
          />
          {{ if .InviteCode }}
            <p><em>{{ call .T "Using invite code %s" .InviteCode }}</em></p>
          {{ end }}
          <input type="submit" value="{{ call .T "Register" }}" />
        </form>
      {{ end }}
    {{ end }}
    {{ $dividerNeeded = true }}
  {{ end }}

  {{ template "footer" . }}
{{ end }}
